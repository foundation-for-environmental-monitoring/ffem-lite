plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'com.google.firebase.crashlytics'
}

def secretsFile = file(System.properties['user.home'] + '/.gradle/gradle.properties')
def secrets = new Properties()
if (secretsFile.exists()) {
    secrets.load(new FileInputStream(secretsFile))
}

android {
    compileSdkVersion 31
    defaultConfig {
        applicationId "io.ffem.lite"
        minSdkVersion 23
        targetSdkVersion 31
        versionCode 121
        versionName "0.72"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions { jvmTarget = "1.8" }

    signingConfigs {
        release {
            if (secrets.getProperty('FFEM_RELEASE_STORE_FILE')) {
                storeFile file(secrets.getProperty('FFEM_RELEASE_STORE_FILE'))
                storePassword secrets.getProperty('FFEM_RELEASE_STORE_PASSWORD')
                keyAlias secrets.getProperty('FFEM_RELEASE_KEY_ALIAS')
                keyPassword secrets.getProperty('FFEM_RELEASE_KEY_PASSWORD')
            }
        }
    }

    buildTypes {
        release {
            if (secrets.getProperty('FFEM_RELEASE_STORE_FILE')) {
                signingConfig signingConfigs.release
            }
            minifyEnabled(true)
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "java.util.Date", "BUILD_TIME", "new java.util.Date(" +
                    (System.currentTimeMillis()) + "L)"
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "ffem-lite-${variant.versionCode}.apk"
                }
            }
        }
    }

    defaultConfig {
        buildConfigField "java.util.concurrent.atomic.AtomicBoolean", "INSTRUMENTED_TEST_RUNNING",
                "new java.util.concurrent.atomic.AtomicBoolean(false)"
        buildConfigField "Boolean", "TAKE_SCREENSHOTS", "false"
        buildConfigField "java.util.Date", "BUILD_TIME", "new java.util.Date(" + 0L + ")"
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }

    tasks.withType(Test) {
        testLogging {
            exceptionFormat "full"
            events "started", "skipped", "passed", "failed"
            showStandardStreams true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //noinspection GradleDependency
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation project(path: ':scanner')

    // Support
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'androidx.fragment:fragment-ktx:1.3.6'

    implementation 'com.google.android.play:core:1.10.1'

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'

    // Room
    implementation 'androidx.room:room-runtime:2.3.0'
    kapt 'androidx.room:room-compiler:2.3.0'

    // Location
    implementation 'com.google.android.gms:play-services-location:18.0.0'

    // Gson
    implementation 'com.google.code.gson:gson:2.8.7'

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:28.4.1')
    implementation 'com.google.firebase:firebase-database-ktx'
    implementation 'com.google.firebase:firebase-storage-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    releaseImplementation 'com.google.firebase:firebase-crashlytics-ktx'

    // Math
    implementation 'org.apache.commons:commons-math3:3.6.1'

    // CameraX
    def camerax_version = "1.1.0-alpha08"
    implementation "androidx.camera:camera-camera2:$camerax_version"
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    implementation "androidx.camera:camera-view:1.0.0-alpha28"

    // Dagger
    kapt 'com.google.dagger:dagger-compiler:2.38.1'
    kapt 'com.google.dagger:dagger-android-processor:2.38.1'
    implementation 'com.google.dagger:dagger-android:2.38.1'
    kaptAndroidTest 'com.google.dagger:dagger-compiler:2.38.1'

    // Logs
    implementation 'com.jakewharton.timber:timber:5.0.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation "androidx.test.ext:junit:1.1.3"
    androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.3'
    androidTestImplementation 'androidx.test:core-ktx:1.4.0'

    // Espresso
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'
    androidTestImplementation('androidx.test.espresso:espresso-contrib:3.4.0') {
        exclude group: 'com.android.support'
        exclude group: 'javax.inject'
    }

    // Robolectric
    testImplementation 'org.robolectric:robolectric:4.5.1'

    // UIAutomator
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'

//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.5'
}
apply plugin: 'com.google.gms.google-services'